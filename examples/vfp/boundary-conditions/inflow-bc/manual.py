import numpy as np
import matplotlib.pyplot as plt

nu = 0.1
v = np.sqrt(8)/3
lambda_inv = nu/v

g0 = 1.

D = 0.5 * 1/np.sqrt(3) * np.array([[1, 0, 0, -1],
              [0, 1, -1, 0],
              [2, 1, (-1 + 4/np.sqrt(3) * lambda_inv), 2/np.sqrt(3) * lambda_inv],
              [-1, 0, 2/np.sqrt(3) * lambda_inv, (+1 + 4/np.sqrt(3) * lambda_inv)]])
b = 1/(2*np.sqrt(3)) * np.array([g0, 0, g0, 0])

alpha = np.linalg.solve(D,b)

def phi_0(x):
    return -0.5 * (x - 1)


def phi_1(x):
    return 0.5 * (x + 1)


def f_0(x):
    return alpha[0] * phi_0(x) + alpha[1] * phi_1(x)


def f_1(x):
    return alpha[2] * phi_0(x) + alpha[3] * phi_1(x)

x = np.linspace(-1,1, 100)

plt.plot(x, f_0(x), x, f_1(x))
plt.show()

# (0,0) 0.272166
# (0,1) 0
# (0,2) 0
# (0,3) 0
# (0,4) -1.66533e-16
# (0,5) 0.272166
# (0,6) 0
# (0,7) 0
# (1,0) 0
# (1,1) 0.272166
# (1,2) 0
# (1,3) 0
# (1,4) -0.272166
# (1,5) 0
# (1,6) 0
# (1,7) 0
# (2,0) 0
# (2,1) 0
# (2,2) 0.0666667
# (2,3) 0.0333333
# (2,4) 0
# (2,5) 0
# (2,6) 0
# (2,7) 0
# (3,0) 0
# (3,1) 0
# (3,2) 0.0333333
# (3,3) 0.0666667
# (3,4) 0
# (3,5) 0
# (3,6) 0
# (3,7) 0
# (4,0) -1.66533e-16
# (4,1) 0.272166
# (4,2) 0
# (4,3) 0
# (4,4) 0.338832
# (4,5) 0.0333333
# (4,6) 0
# (4,7) 0
# (5,0) -0.272166
# (5,1) 0
# (5,2) 0
# (5,3) 0
# (5,4) 0.0333333
# (5,5) 0.338832
# (5,6) 0
# (5,7) 0
# (6,0) 0
# (6,1) 0
# (6,2) 0
# (6,3) 0
# (6,4) 0
# (6,5) 0
# (6,6) 0.0666667
# (6,7) 0.0333333
# (7,0) 0
# (7,1) 0
# (7,2) 0
# (7,3) 0
# (7,4) 0
# (7,5) 0
# (7,6) 0.0333333
# (7,7) 0.0666667
